name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: {{crate_name}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
        options: >-
          --health-cmd "curl -f http://localhost:4444/status"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install cargo-llvm-cov
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-llvm-cov
        version: latest

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run unit tests
      run: cargo test --lib
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/{{crate_name}}_test

    - name: Run integration tests
      run: cargo test --test integration_tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/{{crate_name}}_test

    - name: Run browser tests
      run: cargo test browser_tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/{{crate_name}}_test
        WEBDRIVER_URL: http://localhost:4444

    - name: Run performance tests
      run: cargo test performance
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/{{crate_name}}_test

    - name: Generate test coverage
      run: |
        cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/{{crate_name}}_test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Install cargo-audit
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-audit
        version: latest

    - name: Run security audit
      run: cargo audit

  build:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

    - name: Build project
      run: cargo build --verbose

    - name: Build release
      run: cargo build --release --verbose