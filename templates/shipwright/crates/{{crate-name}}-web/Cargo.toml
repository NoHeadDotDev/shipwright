[package]
name = "{{crate_name}}-web"
version = "0.1.0"
edition = "2021"

[dependencies]
# Web framework
axum = { version = "0.8.4", features = ["ws", "macros", "multipart", "query"] }
tokio = { version = "1.40", features = ["full"] }

# Middleware and utilities
tower = { version = "0.5", features = ["util", "timeout", "limit"] }
tower-http = { version = "0.6", features = ["cors", "fs", "trace", "compression-gzip"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# HTTP utilities
http = "1.0"
mime = "0.3"

# Time and date handling
chrono = { version = "0.4", features = ["serde"] }

# UUID generation
uuid = { version = "1.0", features = ["v4", "serde"] }

# Random number generation
fastrand = "2.0"

# Database
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "migrate"] }

# Shipwright LiveView integration
shipwright-liveview = { version = "0.1.0", path = "../../../shipwright-liveview/shipwright-liveview" }
shipwright-liveview-hotreload = { version = "0.1.0", path = "../../../shipwright-liveview/shipwright-liveview-hotreload" }

# Workspace crates
{{crate_name}}-config = { path = "../{{crate_name}}-config" }
{{crate_name}}-db = { path = "../{{crate_name}}-db" }

[dev-dependencies]
# Testing
tokio-test = "0.4"
axum-test = "15.0"
fantoccini = "0.21"
tempfile = "3.8"
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "migrate", "testing"] }
serial_test = "3.0"
wiremock = "0.5"
mockall = "0.12"
fake = { version = "2.9", features = ["derive", "chrono", "uuid"] }
proptest = "1.4"

[features]
default = []
test-utils = []